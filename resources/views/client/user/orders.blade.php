@extends('client.user.dashboard')

@section('dashboard-content')
    @push('styles')
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

        <style>
            .nav-tabs {
                gap: 0;
                /* X√≥a kho·∫£ng c√°ch n·∫øu d√πng flex */
                margin-bottom: 0;
            }

            .nav-tabs .nav-item {
                margin-right: 2px;
                /* Gi·∫£m kho·∫£ng c√°ch gi·ªØa c√°c tab */
            }

            .nav-tabs .nav-link {
                font-weight: bold;
                color: #333;
                padding: 8px 12px;
                /* Gi·∫£m padding ngang */
                border: 1px solid #dee2e6;
                border-bottom: none;
                border-radius: 0.375rem 0.375rem 0 0;
                background-color: #f9f9f9;
            }

            .nav-tabs .nav-link.active {
                background-color: #337ab7;
                color: #fff !important;
                border-color: #337ab7 #337ab7 transparent;
            }

            .card.order-item {
                transition: box-shadow 0.2s ease-in-out;
            }

            .card.order-item:hover {
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            }

            .rating-stars {
                font-size: 22px;
                color: #ccc;
                cursor: pointer;
            }

            .rating-stars .star {
                margin-right: 5px;
                transition: color 0.2s;
                color: #ccc;
            }

            .rating-stars .star.hovered,
            .rating-stars .star.selected,
            .rating-stars .star.fa-star {
                color: #f5b301 !important;
            }

            .order-action-buttons .btn {
                min-width: 130px;
                /* ho·∫∑c width: 130px n·∫øu mu·ªën tuy·ªát ƒë·ªëi */
                margin: 0 4px 6px 0;
                text-align: center;
                padding: 6px 12px;
                font-size: 14px;
            }

            .rating-stars .star {
                margin-right: 5px;
                color: #ccc;
                transition: color 0.3s, transform 0.2s ease-in-out;
            }

            .rating-stars .star.hovered,
            .rating-stars .star.selected,
            .rating-stars .star.fa-star {
                color: #f5b301 !important;
                transform: scale(1.2);
            }

            .btn:hover {
                transform: translateY(-1px);
                box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
                transition: all 0.2s ease-in-out;
            }

            .card.order-item {
                border: 1px solid #dee2e6;
                border-radius: 0.5rem;
                overflow: hidden;
            }

            .card.order-item .card-header {
                background-color: #f1f1f1;
                font-size: 15px;
                font-weight: 500;
            }

            .nav-tabs {
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
                border-bottom: none;
            }

            .nav-tabs .nav-link.active {
                border-bottom: 2px solid transparent;
                border-radius: 0.5rem 0.5rem 0 0;
            }

            .modal-content {
                border-radius: 0.75rem;
                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
            }
        </style>
    @endpush

    <h3 class="mb-4">üçö Qu·∫£n l√Ω ƒë∆°n h√†ng</h3>

    @php
        $statusLabels = [
            'T·∫•t c·∫£',
            'Ch·ªù x√°c nh·∫≠n',
            'ƒê√£ x√°c nh·∫≠n',
            'ƒêang chu·∫©n b·ªã',
            'ƒêang giao',
            'ƒê√£ giao',
            'Tr·∫£ h√†ng/Ho√†n ti·ªÅn',
            'ƒê√£ h·ªßy',
        ];
        $statusMap = [0 => null, 1 => 1, 2 => 2, 3 => 3, 4 => 4, 5 => 5, 6 => 6, 7 => 7];
        $maxVisible = 10;
    @endphp

    <ul class="nav nav-tabs" id="orderTabs" role="tablist">
        @foreach ($statusLabels as $index => $label)
            <li class="nav-item" role="presentation">
                <button class="nav-link @if ($index === 0) active @endif" data-bs-toggle="tab"
                    data-bs-target="#tab-{{ $index }}" type="button" role="tab">{{ $label }}</button>
            </li>
        @endforeach
    </ul>

    <div class="tab-content pt-3">
        @foreach ($statusLabels as $index => $label)
            @php
                $statusId = $statusMap[$index];
                $filteredOrders = is_null($statusId) ? $orders : $orders->where('order_status_id', $statusId);
            @endphp
            <div class="tab-pane fade @if ($index === 0) show active @endif" id="tab-{{ $index }}"
                role="tabpanel">
                @if ($filteredOrders->count())
                    @foreach ($filteredOrders->values() as $key => $order)
                        <div class="card mb-3 order-item {{ $key >= $maxVisible ? 'd-none' : '' }}"
                            data-id="{{ $order->id }}">

                            <div class="card-header">
                                <strong>M√£ ƒë∆°n h√†ng:</strong> ƒê∆°n #{{ $key + 1 }} |
                                <strong>Tr·∫°ng th√°i:</strong> <span
                                    class="text-primary">{{ $order->orderStatus->status_name ?? 'Kh√¥ng r√µ' }}</span> |
                                <strong>Ng√†y ƒë·∫∑t:</strong> {{ $order->created_at->format('d/m/Y H:i') }}
                            </div>
                            <div class="card-body">
                                @foreach ($order->orderDetails as $item)
                                    @php
                                        $variant = $item->productVariant;
                                        $product = $variant?->product;
                                        $image = $product?->image
                                            ? asset('storage/' . $product->image)
                                            : asset('images/default.jpg');
                                    @endphp
                                    <div class="d-flex mb-3 border-bottom pb-2">
                                        <img src="{{ $image }}" class="img-thumbnail me-3"
                                            style="width: 80px; height: 80px; object-fit: cover;">
                                        <div>
                                            <h5>{{ $product->product_name ?? 'Kh√¥ng r√µ s·∫£n ph·∫©m' }}</h5>
                                            <p>Gi√°: {{ number_format($item->unit_price, 0, ',', '.') }}‚Ç´ x
                                                {{ $item->quantity }}</p>

                                            @if ($order->order_status_id == 5)
                                                @php
                                                    $key = $order->id . '-' . $item->product_variant_id;
                                                    $alreadyReviewed = isset($reviewedMap[$key]);
                                                @endphp

                                                @if ($alreadyReviewed)
                                                    <span class="badge bg-secondary">ƒê√£ ƒë√°nh gi√°</span>
                                                @else
                                                    <button class="btn btn-success btn-sm btn-review"
                                                        data-variant-id="{{ $item->product_variant_id }}"
                                                        data-product-name="{{ $product->product_name }}"
                                                        data-order-id="{{ $order->id }}">ƒê√°nh gi√°</button>
                                                @endif
                                            @endif
                                        </div>
                                    </div>
                                @endforeach
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <div>
                                        <span
                                            class="badge 
            @switch($order->payment_status_id)
                @case(1) bg-warning text-dark @break
                @case(2) bg-success @break
                @case(3) bg-danger @break
                @case(4) bg-info text-dark @break
                @default bg-secondary
            @endswitch">
                                            {{ $order->paymentStatus->name ?? 'Kh√¥ng r√µ' }}
                                        </span>
                                    </div>
                                    <div>
                                        <strong>T·ªïng ti·ªÅn:</strong>
                                        {{ number_format($order->total_amount, 0, ',', '.') }}‚Ç´
                                    </div>
                                </div>

                                <div class="text-end order-action-buttons d-flex flex-wrap justify-content-end">



                                    <a href="{{ route('user.orders.detail', $order->id) }}"
                                        class="btn btn-primary btn-sm">Xem chi ti·∫øt</a>
                                    @if ($order->order_status_id == 1)
                                        <button class="btn btn-danger btn-sm cancel-order-btn">Hu·ª∑ ƒë∆°n</button>
                                    @endif
                                    @if ($order->order_status_id == 5)
                                        @if (!$order->user_confirmed_delivery)
                                            <button class="btn btn-success btn-sm btn-confirm-received"
                                                data-id="{{ $order->id }}">
                                                T√¥i ƒë√£ nh·∫≠n h√†ng
                                            </button>

                                            @if (!isset($deliveryIssues[$order->id]))
                                                <button class="btn btn-outline-danger btn-sm btn-report-issue"
                                                    data-id="{{ $order->id }}">
                                                    Ch∆∞a nh·∫≠n ƒë∆∞·ª£c h√†ng
                                                </button>
                                            @else
                                                <span class="text-info fw-bold">ƒê√£ g·ª≠i ph·∫£n h·ªìi</span>
                                            @endif
                                        @else
                                            <span class="text-success fw-bold">‚úÖ ƒê∆°n h√†ng ƒë√£ ho√†n t·∫•t</span>
                                        @endif
                                    @endif



                                  @if ($order->order_status_id == 5 || $order->order_status_id == 6)
    @php
        $returnRequest = $returnedOrders[$order->id] ?? null;
        $latestProgress = null;
        if ($returnRequest && isset($progresses[$returnRequest->id])) {
            $latestProgress = $progresses[$returnRequest->id]->last();
        }
    @endphp

    @if ($returnRequest)
        @if ($returnRequest->status === 'pending')
            <span class="text-warning fw-bold">ƒê√£ g·ª≠i y√™u c·∫ßu tr·∫£ h√†ng</span>
            <button class="btn btn-danger btn-sm ms-2 cancel-return-request-btn"
                data-id="{{ $returnRequest->id }}">
                H·ªßy y√™u c·∫ßu
            </button>

        @elseif ($returnRequest->status === 'rejected')
            <span class="text-danger fw-bold">Y√™u c·∫ßu b·ªã t·ª´ ch·ªëi</span>

        @elseif ($returnRequest->status === 'approved' && (!$latestProgress || $latestProgress->status === 'approved'))
            <a href="{{ route('user.return.enter_tracking', $returnRequest->id) }}"
                class="btn btn-sm btn-outline-primary">
                Ng∆∞·ªùi ti√™u d√πng ho√†n h√†ng
            </a>

        @else
            @php
                // Chuy·ªÉn tr·∫°ng th√°i ti·∫øn tr√¨nh sang ti·∫øng Vi·ªát theo tr·∫°ng th√°i m·ªõi b·∫°n cung c·∫•p
                $statusVN = match($latestProgress->status ?? '') {
                    'pending'       => 'ƒêang ch·ªù x·ª≠ l√Ω',
                    'approved'      => 'ƒê√£ duy·ªát',
                    'rejected'      => 'ƒê√£ t·ª´ ch·ªëi',
                    'shipped_back'  => 'ƒê√£ g·ª≠i h√†ng tr·∫£ l·∫°i',
                    'received'      => 'ƒê√£ nh·∫≠n h√†ng',
                    'checking'      => 'ƒêang ki·ªÉm tra',
                    'refunded'      => 'ƒê√£ ho√†n ti·ªÅn',
                    default         => '...'
                };
            @endphp
            <span class="text-secondary">Tr·∫°ng th√°i tr·∫£ h√†ng: {{ $statusVN }}</span>
        @endif

    @else
        <button class="btn btn-warning btn-sm return-order-btn">Tr·∫£ h√†ng/Ho√†n ti·ªÅn</button>
    @endif
@endif


                                </div>
                            </div>
                        </div>
                    @endforeach

                    @if ($filteredOrders->count() > $maxVisible)
                        <div class="text-center">
                            <button class="btn btn-link btn-show-more">Xem th√™m</button>
                        </div>
                    @endif
                @else
                    <p class="text-muted">Ch∆∞a c√≥ ƒë∆°n h√†ng trong m·ª•c n√†y.</p>
                @endif
            </div>
        @endforeach
    </div>

    {{-- Modal ƒë√°nh gi√° --}}
    <div id="reviewModal" class="modal fade" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form method="POST" action="{{ route('client.reviews.store') }}" enctype="multipart/form-data">
                @csrf
                <input type="hidden" name="product_variant_id" id="reviewVariantId">
                <input type="hidden" name="order_id" id="reviewOrderId">
                <input type="hidden" name="rating" id="selectedRating" value="0">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="reviewModalLabel">ƒê√°nh gi√° s·∫£n ph·∫©m: <span
                                id="reviewProductName"></span></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Ch·ªçn s·ªë sao</label>
                            <div id="starRating" class="rating-stars">
                                @for ($i = 1; $i <= 5; $i++)
                                    <i class="far fa-star star" data-value="{{ $i }}"
                                        style="font-size: 24px; cursor: pointer;"></i>
                                @endfor
                            </div>

                        </div>
                        <div class="mb-3">
                            <label class="form-label">N·ªôi dung ƒë√°nh gi√°</label>
                            <textarea name="comment" class="form-control" rows="4" placeholder="N·ªôi dung ƒë√°nh gi√°..." required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">·∫¢nh ƒë√°nh gi√° (t√πy ch·ªçn)</label>
                            <input type="file" name="image" accept="image/*" class="form-control">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success">G·ª≠i ƒë√°nh gi√°</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">H·ªßy</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    {{-- Modal tr·∫£ h√†ng --}}
    <div id="returnModal" class="modal fade" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="returnRefundForm" enctype="multipart/form-data">
                @csrf
                <input type="hidden" name="order_id" id="returnOrderId">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="returnModalLabel">Tr·∫£ h√†ng & Ho√†n ti·ªÅn</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">L√Ω do tr·∫£ h√†ng</label>
                            <textarea name="reason" class="form-control" rows="4" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">·∫¢nh s·∫£n ph·∫©m l·ªói</label>
                            <input type="file" name="images[]" multiple class="form-control" accept="image/*">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-warning">G·ª≠i y√™u c·∫ßu</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">H·ªßy</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    {{-- Modal b√°o s·ª± c·ªë giao h√†ng --}}
    <div id="deliveryIssueModal" class="modal fade" tabindex="-1" aria-labelledby="deliveryIssueModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <form id="deliveryIssueForm">
                @csrf
                <input type="hidden" name="order_id" id="issueOrderId">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deliveryIssueModalLabel">B√°o s·ª± c·ªë giao h√†ng</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="ƒê√≥ng"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">M√¥ t·∫£ v·∫•n ƒë·ªÅ</label>
                            <textarea name="reason" class="form-control" rows="4" placeholder="M√¥ t·∫£ l√Ω do b·∫°n ch∆∞a nh·∫≠n ƒë∆∞·ª£c h√†ng..."
                                required></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-danger">G·ª≠i ph·∫£n h·ªìi</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">H·ªßy</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

@endsection
@push('scripts')
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const maxVisible = {{ $maxVisible }};

            // ================================
            // Toggle "Xem th√™m" ƒë∆°n h√†ng
            // ================================
            document.querySelectorAll('.btn-show-more').forEach(button => {
                button.addEventListener('click', function() {
                    const tabPane = this.closest('.tab-pane');
                    const hiddenOrders = tabPane.querySelectorAll('.order-item.d-none');
                    if (hiddenOrders.length) {
                        hiddenOrders.forEach(el => el.classList.remove('d-none'));
                        this.textContent = '·∫®n b·ªõt';
                    } else {
                        tabPane.querySelectorAll('.order-item').forEach((el, index) => {
                            if (index >= maxVisible) el.classList.add('d-none');
                        });
                        this.textContent = 'Xem th√™m';
                    }
                });
            });

            // ================================
            // Hu·ª∑ ƒë∆°n h√†ng
            // ================================
            document.querySelectorAll('.cancel-order-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const card = this.closest('.order-item');
                    const orderId = card.dataset.id;
                    if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën hu·ª∑ ƒë∆°n h√†ng n√†y?')) {
                        fetch(`/client/orders/${orderId}/cancel`, {
                                method: 'POST',
                                headers: {
                                    'X-CSRF-TOKEN': '{{ csrf_token() }}',
                                    'Accept': 'application/json',
                                },
                            })
                            .then(res => res.json())
                            .then(res => {
                                alert(res.message);
                                if (res.success) location.reload();
                            });
                    }
                });
            });

            // ================================
            // M·ªü modal ƒë√°nh gi√°
            // ================================
            document.querySelectorAll('.btn-review').forEach(button => {
                button.addEventListener('click', function() {
                    document.getElementById('reviewVariantId').value = this.dataset.variantId;
                    document.getElementById('reviewOrderId').value = this.dataset.orderId;
                    document.getElementById('reviewProductName').textContent = this.dataset
                        .productName;
                    new bootstrap.Modal(document.getElementById('reviewModal')).show();

                    // Reset stars
                    document.getElementById('selectedRating').value = 0;
                    document.querySelectorAll('#starRating .star').forEach(star => {
                        star.classList.remove('fas', 'selected', 'hovered');
                        star.classList.add('far');
                    });
                });
            });

            // ================================
            // Star Rating
            // ================================
            let currentRating = 0;
            const stars = document.querySelectorAll('#starRating .star');
            stars.forEach(star => {
                star.addEventListener('mouseenter', () => {
                    const val = parseInt(star.dataset.value);
                    stars.forEach(s => {
                        s.classList.toggle('fas', parseInt(s.dataset.value) <= val);
                        s.classList.toggle('far', parseInt(s.dataset.value) > val);
                    });
                });

                star.addEventListener('mouseleave', () => {
                    stars.forEach(s => {
                        s.classList.remove('hovered');
                        if (!s.classList.contains('selected')) {
                            s.classList.remove('fas');
                            s.classList.add('far');
                        }
                    });
                });

                star.addEventListener('click', () => {
                    currentRating = parseInt(star.dataset.value);
                    document.getElementById('selectedRating').value = currentRating;
                    stars.forEach(s => {
                        s.classList.toggle('selected', parseInt(s.dataset.value) <=
                            currentRating);
                        s.classList.toggle('fas', parseInt(s.dataset.value) <=
                            currentRating);
                        s.classList.toggle('far', parseInt(s.dataset.value) >
                            currentRating);
                    });
                });
            });

            // ================================
            // M·ªü modal Tr·∫£ h√†ng/Ho√†n ti·ªÅn
            // ================================
            document.querySelectorAll('.return-order-btn').forEach(button => {
                button.addEventListener('click', function() {
                    document.getElementById('returnOrderId').value = this.closest('.order-item')
                        .dataset.id;
                    new bootstrap.Modal(document.getElementById('returnModal')).show();
                });
            });

            // ================================
            // G·ª≠i y√™u c·∫ßu tr·∫£ h√†ng
            // ================================
            const returnForm = document.getElementById('returnRefundForm');
            if (returnForm) {
                returnForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    const formData = new FormData(this);
                    const orderId = document.getElementById('returnOrderId').value;

                    fetch(`{{ route('orders.return_refund', ':id') }}`.replace(':id', orderId), {
                            method: 'POST',
                            headers: {
                                'X-CSRF-TOKEN': '{{ csrf_token() }}'
                            },
                            body: formData
                        })
                        .then(res => res.json())
                        .then(res => {
                            if (res.success) {
                                const returnModalEl = document.getElementById('returnModal');
                                const modalInstance = bootstrap.Modal.getInstance(returnModalEl);
                                if (modalInstance) modalInstance.hide();

                                const card = document.querySelector(
                                    `.order-item[data-id="${orderId}"]`);
                                const returnBtn = card?.querySelector('.return-order-btn');
                                if (returnBtn) {
                                    returnBtn.outerHTML = `
                            <span class="text-warning fw-bold">ƒê√£ g·ª≠i y√™u c·∫ßu tr·∫£ h√†ng</span>
                            <button class="btn btn-danger btn-sm ms-2 cancel-return-request-btn" data-id="${res.return_request_id}">
                                H·ªßy y√™u c·∫ßu
                            </button>
                        `;

                                    // G·∫Øn s·ª± ki·ªán click l·∫°i cho n√∫t "H·ªßy y√™u c·∫ßu" v·ª´a t·∫°o
                                    const cancelBtn = card.querySelector('.cancel-return-request-btn');
                                    if (cancelBtn) {
                                        cancelBtn.addEventListener('click', handleCancelReturnRequest);
                                    }
                                }
                            }

                            alert(res.message);
                        })
                        .catch(() => alert('ƒê√£ x·∫£y ra l·ªói khi g·ª≠i y√™u c·∫ßu tr·∫£ h√†ng.'));
                });
            }

            // ================================
            // Hu·ª∑ y√™u c·∫ßu tr·∫£ h√†ng (d√πng l·∫°i h√†m)
            // ================================
            function handleCancelReturnRequest() {
                if (!confirm('B·∫°n c√≥ ch·∫Øc mu·ªën h·ªßy y√™u c·∫ßu tr·∫£ h√†ng n√†y kh√¥ng?')) return;

                const id = this.dataset.id;

                fetch(`/return-request/${id}/cancel`, {
                        method: 'POST',
                        headers: {
                            'X-CSRF-TOKEN': '{{ csrf_token() }}',
                            'Accept': 'application/json',
                        }
                    })
                    .then(res => res.json())
                    .then(res => {
                        alert(res.message);
                        if (res.success) location.reload();
                    })
                    .catch(() => alert('C√≥ l·ªói x·∫£y ra khi h·ªßy y√™u c·∫ßu.'));
            }

            // G·∫Øn s·ª± ki·ªán h·ªßy y√™u c·∫ßu cho c√°c n√∫t ƒë√£ c√≥
            document.querySelectorAll('.cancel-return-request-btn').forEach(button => {
                button.addEventListener('click', handleCancelReturnRequest);
            });
            // X√°c nh·∫≠n ƒë√£ nh·∫≠n h√†ng
            document.querySelectorAll('.btn-confirm-received').forEach(button => {
                button.addEventListener('click', function() {
                    const id = this.dataset.id;
                    if (confirm('X√°c nh·∫≠n b·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c h√†ng?')) {
                        fetch(`/orders/${id}/confirm-received`, {
                                method: 'POST',
                                headers: {
                                    'X-CSRF-TOKEN': '{{ csrf_token() }}',
                                    'Accept': 'application/json',
                                },
                            })
                            .then(res => res.json())
                            .then(res => {
                                alert(res.message);
                                location.reload();
                            });
                    }
                });
            });

            // B√°o s·ª± c·ªë giao h√†ng
            document.querySelectorAll('.btn-report-issue').forEach(button => {
                button.addEventListener('click', function() {
                    document.getElementById('issueOrderId').value = this.dataset.id;
                    new bootstrap.Modal(document.getElementById('deliveryIssueModal')).show();
                });
            });

            document.getElementById('deliveryIssueForm').addEventListener('submit', function(e) {
                e.preventDefault();
                const formData = new FormData(this);

                fetch(`/orders/report-issue`, {
                        method: 'POST',
                        headers: {
                            'X-CSRF-TOKEN': '{{ csrf_token() }}',
                            'Accept': 'application/json',
                        },
                        body: formData
                    })
                    .then(res => res.json())
                    .then(res => {
                        alert(res.message);

                        // ƒê√≥ng modal
                        const modalEl = document.getElementById('deliveryIssueModal');
                        const modal = bootstrap.Modal.getInstance(modalEl);
                        if (modal) modal.hide();

                        // C·∫≠p nh·∫≠t UI: thay n√∫t b·∫±ng d√≤ng ch·ªØ "ƒê√£ ph·∫£n h·ªìi"
                        const orderId = document.getElementById('issueOrderId').value;
                        const card = document.querySelector(`.order-item[data-id="${orderId}"]`);
                        const reportBtn = card?.querySelector('.btn-report-issue');

                        if (reportBtn) {
                            reportBtn.outerHTML =
                                `<span class="text-info fw-bold">ƒê√£ g·ª≠i ph·∫£n h·ªìi</span>`;
                        }
                    })

                    .catch(() => alert('C√≥ l·ªói x·∫£y ra khi g·ª≠i ph·∫£n h·ªìi.'));
            });

        });
    </script>
@endpush
